###### agent_base.py
from google import genai
from conf import Gemini_key
import asyncio

RESET = "\033[0m"

class DevelopmentAgent:
    def __init__(self, agent_name, color_code):
        self.client = genai.Client(api_key=Gemini_key)
        self.chat = self.client.chats.create(model='gemini-2.0-flash-thinking-exp')
        self.agent_name = agent_name
        self.color = color_code
        self.signature = f"// Generated by {agent_name}"
    
    async def generate_initial(self, prompt: str) -> str:
        print(f"{self.color}{self.agent_name} generating initial script...{RESET}")
        response = await asyncio.to_thread(lambda: self.chat.send_message(prompt))
        return f"{self.signature}\n{response.text}"

    async def handle_feedback(self, feedback: str, current_script: str) -> str:
        print(f"{self.color}{self.agent_name} received feedback:{RESET}")
        print(f"{self.color}{feedback}{RESET}")
        
        prompt = f"""
[Tester Feedback]
{feedback}

[Current Script]
{current_script}

Update the script to resolve these issues while maintaining:
1. All original functionality
2. Unity coding standards
3. Class structure
Provide the FULL updated script with {self.signature}"""
        
        print(f"{self.color}{self.agent_name} processing feedback...{RESET}")
        response = await asyncio.to_thread(lambda: self.chat.send_message(prompt))
        return f"{self.signature}\n{response.text}"